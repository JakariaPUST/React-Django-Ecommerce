{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer // userRegisterReducer,\n// userDetailsReducer,\n// userUpdateProfileReducer,\n// userListReducer,\n// userDeleteReducer,\n// userUpdateReducer,\n} from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  cart: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/ehsan/Desktop/React-Django-Ecom/React-Django-Ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SACIC,gBADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AAPJ,OAQO,yBARP;AAWA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,WAAW,EAAEL,kBADe;AAE5BM,EAAAA,cAAc,EAAEL,qBAFY;AAG5BM,EAAAA,IAAI,EAAEL,WAHsB;AAI5BK,EAAAA,IAAI,EAAEJ;AAJsB,CAAD,CAA/B;AAQA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAE;AACFO,IAAAA,SAAS,EAAEN;AADT;AADW,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACjB,KAAD,CAAnB;AACA,MAAMkB,KAAK,GAAGrB,WAAW,CAACS,OAAD,EAAUS,YAAV,EAAwBd,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    // userRegisterReducer,\n    // userDetailsReducer,\n    // userUpdateProfileReducer,\n    // userListReducer,\n    // userDeleteReducer,\n    // userUpdateReducer,\n} from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    cart: userLoginReducer,\n\n    \n})\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage\n    }}\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}