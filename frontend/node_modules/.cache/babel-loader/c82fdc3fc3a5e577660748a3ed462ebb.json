{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer // userUpdateProfileReducer,\n// userListReducer,\n// userDeleteReducer,\n// userUpdateReducer,\n} from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userRegister: userRegisterReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/ehsan/Desktop/React-Django-Ecom/React-Django-Ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AAIA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,CAII;AACA;AACA;AACA;AAPJ,OAQO,yBARP;AAWA,MAAMC,OAAO,GAAGV,eAAe,CAAC;AAC5BW,EAAAA,WAAW,EAAEP,kBADe;AAE5BQ,EAAAA,cAAc,EAAEP,qBAFY;AAG5BQ,EAAAA,IAAI,EAAEP,WAHsB;AAI5BQ,EAAAA,SAAS,EAAEP,gBAJiB;AAK5BQ,EAAAA,YAAY,EAAEP,mBALc;AAM5BO,EAAAA,YAAY,EAAEP;AANc,CAAD,CAA/B;AASA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAIA,MAAMI,YAAY,GAAG;AACjBT,EAAAA,IAAI,EAAE;AACFU,IAAAA,SAAS,EAAEP;AADT,GADW;AAIjBF,EAAAA,SAAS,EAAE;AAAEU,IAAAA,QAAQ,EAAEH;AAAZ;AAJM,CAArB;AAMA,MAAMI,UAAU,GAAG,CAACvB,KAAD,CAAnB;AACA,MAAMwB,KAAK,GAAG3B,WAAW,CAACW,OAAD,EAAUY,YAAV,EAAwBnB,mBAAmB,CAACF,eAAe,CAAC,GAAGwB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\n\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    // userUpdateProfileReducer,\n    // userListReducer,\n    // userDeleteReducer,\n    // userUpdateReducer,\n} from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userRegister: userRegisterReducer,\n    \n})\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}