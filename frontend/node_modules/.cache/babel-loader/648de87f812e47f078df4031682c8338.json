{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT // USER_REGISTER_REQUEST,\n// USER_REGISTER_SUCCESS,\n// USER_REGISTER_FAIL,\n// USER_DETAILS_REQUEST,\n// USER_DETAILS_SUCCESS,\n// USER_DETAILS_FAIL,\n// USER_DETAILS_RESET,\n// USER_UPDATE_PROFILE_REQUEST,\n// USER_UPDATE_PROFILE_SUCCESS,\n// USER_UPDATE_PROFILE_FAIL,\n// USER_UPDATE_PROFILE_RESET,\n// USER_LIST_REQUEST,\n// USER_LIST_SUCCESS,\n// USER_LIST_FAIL,\n// USER_LIST_RESET,\n// USER_DELETE_REQUEST,\n// USER_DELETE_SUCCESS,\n// USER_DELETE_FAIL,\n// USER_UPDATE_REQUEST,\n// USER_UPDATE_SUCCESS,\n// USER_UPDATE_FAIL,\n} from '../constants/userConstants'; // import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo'); // dispatch({ type: USER_LOGOUT })\n  // dispatch({ type: USER_DETAILS_RESET })\n  // dispatch({ type: ORDER_LIST_MY_RESET })\n  // dispatch({ type: USER_LIST_RESET })\n}; // export const register = (name, email, password) => async (dispatch) => {\n//     try {\n//         dispatch({\n//             type: USER_REGISTER_REQUEST\n//         })\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json'\n//             }\n//         }\n//         const { data } = await axios.post(\n//             '/api/users/register/',\n//             { 'name': name, 'email': email, 'password': password },\n//             config\n//         )\n//         dispatch({\n//             type: USER_REGISTER_SUCCESS,\n//             payload: data\n//         })\n//         dispatch({\n//             type: USER_LOGIN_SUCCESS,\n//             payload: data\n//         })\n//         localStorage.setItem('userInfo', JSON.stringify(data))\n//     } catch (error) {\n//         dispatch({\n//             type: USER_REGISTER_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n// export const getUserDetails = (id) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_DETAILS_REQUEST\n//         })\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n//         const { data } = await axios.get(\n//             `/api/users/${id}/`,\n//             config\n//         )\n//         dispatch({\n//             type: USER_DETAILS_SUCCESS,\n//             payload: data\n//         })\n//     } catch (error) {\n//         dispatch({\n//             type: USER_DETAILS_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_UPDATE_PROFILE_REQUEST\n//         })\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n//         const { data } = await axios.put(\n//             `/api/users/profile/update/`,\n//             user,\n//             config\n//         )\n//         dispatch({\n//             type: USER_UPDATE_PROFILE_SUCCESS,\n//             payload: data\n//         })\n//         dispatch({\n//             type: USER_LOGIN_SUCCESS,\n//             payload: data\n//         })\n//         localStorage.setItem('userInfo', JSON.stringify(data))\n//     } catch (error) {\n//         dispatch({\n//             type: USER_UPDATE_PROFILE_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n// export const listUsers = () => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_LIST_REQUEST\n//         })\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n//         const { data } = await axios.get(\n//             `/api/users/`,\n//             config\n//         )\n//         dispatch({\n//             type: USER_LIST_SUCCESS,\n//             payload: data\n//         })\n//     } catch (error) {\n//         dispatch({\n//             type: USER_LIST_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n// export const deleteUser = (id) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_DELETE_REQUEST\n//         })\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n//         const { data } = await axios.delete(\n//             `/api/users/delete/${id}/`,\n//             config\n//         )\n//         dispatch({\n//             type: USER_DELETE_SUCCESS,\n//             payload: data\n//         })\n//     } catch (error) {\n//         dispatch({\n//             type: USER_DELETE_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n// export const updateUser = (user) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_UPDATE_REQUEST\n//         })\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n//         const { data } = await axios.put(\n//             `/api/users/update/${user._id}/`,\n//             user,\n//             config\n//         )\n//         dispatch({\n//             type: USER_UPDATE_SUCCESS,\n//         })\n//         dispatch({\n//             type: USER_DETAILS_SUCCESS,\n//             payload: data\n//         })\n//     } catch (error) {\n//         dispatch({\n//             type: USER_UPDATE_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }","map":{"version":3,"sources":["/home/ehsan/Desktop/React-Django-Ecom/React-Django-Ecommerce/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,WAJJ,CAMI;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA/BJ,OAiCO,4BAjCP,C,CAmCA;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAIA,UAAMS,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CACnB,mBADmB,EAEnB;AAAE,kBAAYP,KAAd;AAAqB,kBAAYC;AAAjC,KAFmB,EAGnBG,MAHmB,CAAvB;AAMAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,kBADD;AAELY,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AAEH,GAxBD,CAwBE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,eADD;AAELW,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADjB,GAEHF,KAAK,CAACG;AAJP,KAAD,CAAR;AAMH;AACJ,CAjCM;AAoCP,OAAO,MAAMC,MAAM,GAAG,MAAOf,QAAD,IAAc;AACtCO,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB,EADsC,CAEtC;AACA;AACA;AACA;AACH,CANM,C,CASP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    // USER_REGISTER_REQUEST,\n    // USER_REGISTER_SUCCESS,\n    // USER_REGISTER_FAIL,\n\n    // USER_DETAILS_REQUEST,\n    // USER_DETAILS_SUCCESS,\n    // USER_DETAILS_FAIL,\n    // USER_DETAILS_RESET,\n\n    // USER_UPDATE_PROFILE_REQUEST,\n    // USER_UPDATE_PROFILE_SUCCESS,\n    // USER_UPDATE_PROFILE_FAIL,\n    // USER_UPDATE_PROFILE_RESET,\n\n    // USER_LIST_REQUEST,\n    // USER_LIST_SUCCESS,\n    // USER_LIST_FAIL,\n    // USER_LIST_RESET,\n\n    // USER_DELETE_REQUEST,\n    // USER_DELETE_SUCCESS,\n    // USER_DELETE_FAIL,\n\n    // USER_UPDATE_REQUEST,\n    // USER_UPDATE_SUCCESS,\n    // USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\n// import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    // dispatch({ type: USER_LOGOUT })\n    // dispatch({ type: USER_DETAILS_RESET })\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n}\n\n\n// export const register = (name, email, password) => async (dispatch) => {\n//     try {\n//         dispatch({\n//             type: USER_REGISTER_REQUEST\n//         })\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json'\n//             }\n//         }\n\n//         const { data } = await axios.post(\n//             '/api/users/register/',\n//             { 'name': name, 'email': email, 'password': password },\n//             config\n//         )\n\n//         dispatch({\n//             type: USER_REGISTER_SUCCESS,\n//             payload: data\n//         })\n\n//         dispatch({\n//             type: USER_LOGIN_SUCCESS,\n//             payload: data\n//         })\n\n//         localStorage.setItem('userInfo', JSON.stringify(data))\n\n//     } catch (error) {\n//         dispatch({\n//             type: USER_REGISTER_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n\n// export const getUserDetails = (id) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_DETAILS_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.get(\n//             `/api/users/${id}/`,\n//             config\n//         )\n\n//         dispatch({\n//             type: USER_DETAILS_SUCCESS,\n//             payload: data\n//         })\n\n\n//     } catch (error) {\n//         dispatch({\n//             type: USER_DETAILS_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_UPDATE_PROFILE_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.put(\n//             `/api/users/profile/update/`,\n//             user,\n//             config\n//         )\n\n//         dispatch({\n//             type: USER_UPDATE_PROFILE_SUCCESS,\n//             payload: data\n//         })\n\n//         dispatch({\n//             type: USER_LOGIN_SUCCESS,\n//             payload: data\n//         })\n\n//         localStorage.setItem('userInfo', JSON.stringify(data))\n\n//     } catch (error) {\n//         dispatch({\n//             type: USER_UPDATE_PROFILE_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n\n// export const listUsers = () => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_LIST_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.get(\n//             `/api/users/`,\n//             config\n//         )\n\n//         dispatch({\n//             type: USER_LIST_SUCCESS,\n//             payload: data\n//         })\n\n\n//     } catch (error) {\n//         dispatch({\n//             type: USER_LIST_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n\n// export const deleteUser = (id) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_DELETE_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.delete(\n//             `/api/users/delete/${id}/`,\n//             config\n//         )\n\n//         dispatch({\n//             type: USER_DELETE_SUCCESS,\n//             payload: data\n//         })\n\n\n//     } catch (error) {\n//         dispatch({\n//             type: USER_DELETE_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n\n// export const updateUser = (user) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: USER_UPDATE_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.put(\n//             `/api/users/update/${user._id}/`,\n//             user,\n//             config\n//         )\n\n//         dispatch({\n//             type: USER_UPDATE_SUCCESS,\n//         })\n\n//         dispatch({\n//             type: USER_DETAILS_SUCCESS,\n//             payload: data\n//         })\n\n\n//     } catch (error) {\n//         dispatch({\n//             type: USER_UPDATE_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }"]},"metadata":{},"sourceType":"module"}